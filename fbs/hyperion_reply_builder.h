#ifndef HYPERION_REPLY_BUILDER_H
#define HYPERION_REPLY_BUILDER_H

/* Generated by flatcc 0.6.1 FlatBuffers schema compiler for C by dvide.com */

#ifndef HYPERION_REPLY_READER_H
#include "hyperion_reply_reader.h"
#endif
#ifndef FLATBUFFERS_COMMON_BUILDER_H
#include "flatbuffers_common_builder.h"
#endif
#include "flatcc/flatcc_prologue.h"
#ifndef flatbuffers_identifier
#define flatbuffers_identifier 0
#endif
#ifndef flatbuffers_extension
#define flatbuffers_extension "bin"
#endif

static const flatbuffers_voffset_t __hyperionnet_Reply_required[] = { 0 };
typedef flatbuffers_ref_t hyperionnet_Reply_ref_t;
static hyperionnet_Reply_ref_t hyperionnet_Reply_clone(flatbuffers_builder_t *B, hyperionnet_Reply_table_t t);
__flatbuffers_build_table(flatbuffers_, hyperionnet_Reply, 3)

#define __hyperionnet_Reply_formal_args , flatbuffers_string_ref_t v0, int32_t v1, int32_t v2
#define __hyperionnet_Reply_call_args , v0, v1, v2
static inline hyperionnet_Reply_ref_t hyperionnet_Reply_create(flatbuffers_builder_t *B __hyperionnet_Reply_formal_args);
__flatbuffers_build_table_prolog(flatbuffers_, hyperionnet_Reply, hyperionnet_Reply_file_identifier, hyperionnet_Reply_type_identifier)

__flatbuffers_build_string_field(0, flatbuffers_, hyperionnet_Reply_error, hyperionnet_Reply)
__flatbuffers_build_scalar_field(1, flatbuffers_, hyperionnet_Reply_video, flatbuffers_int32, int32_t, 4, 4, INT32_C(-1), hyperionnet_Reply)
__flatbuffers_build_scalar_field(2, flatbuffers_, hyperionnet_Reply_registered, flatbuffers_int32, int32_t, 4, 4, INT32_C(-1), hyperionnet_Reply)

static inline hyperionnet_Reply_ref_t hyperionnet_Reply_create(flatbuffers_builder_t *B __hyperionnet_Reply_formal_args)
{
    if (hyperionnet_Reply_start(B)
        || hyperionnet_Reply_error_add(B, v0)
        || hyperionnet_Reply_video_add(B, v1)
        || hyperionnet_Reply_registered_add(B, v2)) {
        return 0;
    }
    return hyperionnet_Reply_end(B);
}

static hyperionnet_Reply_ref_t hyperionnet_Reply_clone(flatbuffers_builder_t *B, hyperionnet_Reply_table_t t)
{
    __flatbuffers_memoize_begin(B, t);
    if (hyperionnet_Reply_start(B)
        || hyperionnet_Reply_error_pick(B, t)
        || hyperionnet_Reply_video_pick(B, t)
        || hyperionnet_Reply_registered_pick(B, t)) {
        return 0;
    }
    __flatbuffers_memoize_end(B, t, hyperionnet_Reply_end(B));
}

#include "flatcc/flatcc_epilogue.h"
#endif /* HYPERION_REPLY_BUILDER_H */
