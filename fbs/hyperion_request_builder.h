#ifndef HYPERION_REQUEST_BUILDER_H
#define HYPERION_REQUEST_BUILDER_H

/* Generated by flatcc 0.6.1 FlatBuffers schema compiler for C by dvide.com */

#ifndef HYPERION_REQUEST_READER_H
#include "hyperion_request_reader.h"
#endif
#ifndef FLATBUFFERS_COMMON_BUILDER_H
#include "flatbuffers_common_builder.h"
#endif
#include "flatcc/flatcc_prologue.h"
#ifndef flatbuffers_identifier
#define flatbuffers_identifier 0
#endif
#ifndef flatbuffers_extension
#define flatbuffers_extension "bin"
#endif

typedef flatbuffers_union_ref_t hyperionnet_ImageType_union_ref_t;
typedef flatbuffers_union_vec_ref_t hyperionnet_ImageType_union_vec_ref_t;
static hyperionnet_ImageType_union_ref_t hyperionnet_ImageType_clone(flatbuffers_builder_t *B, hyperionnet_ImageType_union_t t);
typedef flatbuffers_union_ref_t hyperionnet_Command_union_ref_t;
typedef flatbuffers_union_vec_ref_t hyperionnet_Command_union_vec_ref_t;
static hyperionnet_Command_union_ref_t hyperionnet_Command_clone(flatbuffers_builder_t *B, hyperionnet_Command_union_t t);

static const flatbuffers_voffset_t __hyperionnet_Register_required[] = { 0, 0 };
typedef flatbuffers_ref_t hyperionnet_Register_ref_t;
static hyperionnet_Register_ref_t hyperionnet_Register_clone(flatbuffers_builder_t *B, hyperionnet_Register_table_t t);
__flatbuffers_build_table(flatbuffers_, hyperionnet_Register, 2)

static const flatbuffers_voffset_t __hyperionnet_RawImage_required[] = { 0 };
typedef flatbuffers_ref_t hyperionnet_RawImage_ref_t;
static hyperionnet_RawImage_ref_t hyperionnet_RawImage_clone(flatbuffers_builder_t *B, hyperionnet_RawImage_table_t t);
__flatbuffers_build_table(flatbuffers_, hyperionnet_RawImage, 3)

static const flatbuffers_voffset_t __hyperionnet_NV12Image_required[] = { 0 };
typedef flatbuffers_ref_t hyperionnet_NV12Image_ref_t;
static hyperionnet_NV12Image_ref_t hyperionnet_NV12Image_clone(flatbuffers_builder_t *B, hyperionnet_NV12Image_table_t t);
__flatbuffers_build_table(flatbuffers_, hyperionnet_NV12Image, 6)

static const flatbuffers_voffset_t __hyperionnet_Image_required[] = { 1, 0 };
typedef flatbuffers_ref_t hyperionnet_Image_ref_t;
static hyperionnet_Image_ref_t hyperionnet_Image_clone(flatbuffers_builder_t *B, hyperionnet_Image_table_t t);
__flatbuffers_build_table(flatbuffers_, hyperionnet_Image, 3)

static const flatbuffers_voffset_t __hyperionnet_Clear_required[] = { 0 };
typedef flatbuffers_ref_t hyperionnet_Clear_ref_t;
static hyperionnet_Clear_ref_t hyperionnet_Clear_clone(flatbuffers_builder_t *B, hyperionnet_Clear_table_t t);
__flatbuffers_build_table(flatbuffers_, hyperionnet_Clear, 1)

static const flatbuffers_voffset_t __hyperionnet_Color_required[] = { 0 };
typedef flatbuffers_ref_t hyperionnet_Color_ref_t;
static hyperionnet_Color_ref_t hyperionnet_Color_clone(flatbuffers_builder_t *B, hyperionnet_Color_table_t t);
__flatbuffers_build_table(flatbuffers_, hyperionnet_Color, 2)

static const flatbuffers_voffset_t __hyperionnet_Request_required[] = { 1, 0 };
typedef flatbuffers_ref_t hyperionnet_Request_ref_t;
static hyperionnet_Request_ref_t hyperionnet_Request_clone(flatbuffers_builder_t *B, hyperionnet_Request_table_t t);
__flatbuffers_build_table(flatbuffers_, hyperionnet_Request, 2)

#define __hyperionnet_Register_formal_args , flatbuffers_string_ref_t v0, int32_t v1
#define __hyperionnet_Register_call_args , v0, v1
static inline hyperionnet_Register_ref_t hyperionnet_Register_create(flatbuffers_builder_t *B __hyperionnet_Register_formal_args);
__flatbuffers_build_table_prolog(flatbuffers_, hyperionnet_Register, hyperionnet_Register_file_identifier, hyperionnet_Register_type_identifier)

#define __hyperionnet_RawImage_formal_args , flatbuffers_uint8_vec_ref_t v0, int32_t v1, int32_t v2
#define __hyperionnet_RawImage_call_args , v0, v1, v2
static inline hyperionnet_RawImage_ref_t hyperionnet_RawImage_create(flatbuffers_builder_t *B __hyperionnet_RawImage_formal_args);
__flatbuffers_build_table_prolog(flatbuffers_, hyperionnet_RawImage, hyperionnet_RawImage_file_identifier, hyperionnet_RawImage_type_identifier)

#define __hyperionnet_NV12Image_formal_args ,\
  flatbuffers_uint8_vec_ref_t v0, flatbuffers_uint8_vec_ref_t v1, int32_t v2, int32_t v3, int32_t v4, int32_t v5
#define __hyperionnet_NV12Image_call_args ,\
  v0, v1, v2, v3, v4, v5
static inline hyperionnet_NV12Image_ref_t hyperionnet_NV12Image_create(flatbuffers_builder_t *B __hyperionnet_NV12Image_formal_args);
__flatbuffers_build_table_prolog(flatbuffers_, hyperionnet_NV12Image, hyperionnet_NV12Image_file_identifier, hyperionnet_NV12Image_type_identifier)

#define __hyperionnet_Image_formal_args , hyperionnet_ImageType_union_ref_t v1, int32_t v2
#define __hyperionnet_Image_call_args , v1, v2
static inline hyperionnet_Image_ref_t hyperionnet_Image_create(flatbuffers_builder_t *B __hyperionnet_Image_formal_args);
__flatbuffers_build_table_prolog(flatbuffers_, hyperionnet_Image, hyperionnet_Image_file_identifier, hyperionnet_Image_type_identifier)

#define __hyperionnet_Clear_formal_args , int32_t v0
#define __hyperionnet_Clear_call_args , v0
static inline hyperionnet_Clear_ref_t hyperionnet_Clear_create(flatbuffers_builder_t *B __hyperionnet_Clear_formal_args);
__flatbuffers_build_table_prolog(flatbuffers_, hyperionnet_Clear, hyperionnet_Clear_file_identifier, hyperionnet_Clear_type_identifier)

#define __hyperionnet_Color_formal_args , int32_t v0, int32_t v1
#define __hyperionnet_Color_call_args , v0, v1
static inline hyperionnet_Color_ref_t hyperionnet_Color_create(flatbuffers_builder_t *B __hyperionnet_Color_formal_args);
__flatbuffers_build_table_prolog(flatbuffers_, hyperionnet_Color, hyperionnet_Color_file_identifier, hyperionnet_Color_type_identifier)

#define __hyperionnet_Request_formal_args , hyperionnet_Command_union_ref_t v1
#define __hyperionnet_Request_call_args , v1
static inline hyperionnet_Request_ref_t hyperionnet_Request_create(flatbuffers_builder_t *B __hyperionnet_Request_formal_args);
__flatbuffers_build_table_prolog(flatbuffers_, hyperionnet_Request, hyperionnet_Request_file_identifier, hyperionnet_Request_type_identifier)

static inline hyperionnet_ImageType_union_ref_t hyperionnet_ImageType_as_NONE(void)
{ hyperionnet_ImageType_union_ref_t uref; uref.type = hyperionnet_ImageType_NONE; uref.value = 0; return uref; }
static inline hyperionnet_ImageType_union_ref_t hyperionnet_ImageType_as_RawImage(hyperionnet_RawImage_ref_t ref)
{ hyperionnet_ImageType_union_ref_t uref; uref.type = hyperionnet_ImageType_RawImage; uref.value = ref; return uref; }
static inline hyperionnet_ImageType_union_ref_t hyperionnet_ImageType_as_NV12Image(hyperionnet_NV12Image_ref_t ref)
{ hyperionnet_ImageType_union_ref_t uref; uref.type = hyperionnet_ImageType_NV12Image; uref.value = ref; return uref; }
__flatbuffers_build_union_vector(flatbuffers_, hyperionnet_ImageType)

static hyperionnet_ImageType_union_ref_t hyperionnet_ImageType_clone(flatbuffers_builder_t *B, hyperionnet_ImageType_union_t u)
{
    switch (u.type) {
    case 1: return hyperionnet_ImageType_as_RawImage(hyperionnet_RawImage_clone(B, (hyperionnet_RawImage_table_t)u.value));
    case 2: return hyperionnet_ImageType_as_NV12Image(hyperionnet_NV12Image_clone(B, (hyperionnet_NV12Image_table_t)u.value));
    default: return hyperionnet_ImageType_as_NONE();
    }
}

static inline hyperionnet_Command_union_ref_t hyperionnet_Command_as_NONE(void)
{ hyperionnet_Command_union_ref_t uref; uref.type = hyperionnet_Command_NONE; uref.value = 0; return uref; }
static inline hyperionnet_Command_union_ref_t hyperionnet_Command_as_Color(hyperionnet_Color_ref_t ref)
{ hyperionnet_Command_union_ref_t uref; uref.type = hyperionnet_Command_Color; uref.value = ref; return uref; }
static inline hyperionnet_Command_union_ref_t hyperionnet_Command_as_Image(hyperionnet_Image_ref_t ref)
{ hyperionnet_Command_union_ref_t uref; uref.type = hyperionnet_Command_Image; uref.value = ref; return uref; }
static inline hyperionnet_Command_union_ref_t hyperionnet_Command_as_Clear(hyperionnet_Clear_ref_t ref)
{ hyperionnet_Command_union_ref_t uref; uref.type = hyperionnet_Command_Clear; uref.value = ref; return uref; }
static inline hyperionnet_Command_union_ref_t hyperionnet_Command_as_Register(hyperionnet_Register_ref_t ref)
{ hyperionnet_Command_union_ref_t uref; uref.type = hyperionnet_Command_Register; uref.value = ref; return uref; }
__flatbuffers_build_union_vector(flatbuffers_, hyperionnet_Command)

static hyperionnet_Command_union_ref_t hyperionnet_Command_clone(flatbuffers_builder_t *B, hyperionnet_Command_union_t u)
{
    switch (u.type) {
    case 1: return hyperionnet_Command_as_Color(hyperionnet_Color_clone(B, (hyperionnet_Color_table_t)u.value));
    case 2: return hyperionnet_Command_as_Image(hyperionnet_Image_clone(B, (hyperionnet_Image_table_t)u.value));
    case 3: return hyperionnet_Command_as_Clear(hyperionnet_Clear_clone(B, (hyperionnet_Clear_table_t)u.value));
    case 4: return hyperionnet_Command_as_Register(hyperionnet_Register_clone(B, (hyperionnet_Register_table_t)u.value));
    default: return hyperionnet_Command_as_NONE();
    }
}

__flatbuffers_build_string_field(0, flatbuffers_, hyperionnet_Register_origin, hyperionnet_Register)
__flatbuffers_build_scalar_field(1, flatbuffers_, hyperionnet_Register_priority, flatbuffers_int32, int32_t, 4, 4, INT32_C(0), hyperionnet_Register)

static inline hyperionnet_Register_ref_t hyperionnet_Register_create(flatbuffers_builder_t *B __hyperionnet_Register_formal_args)
{
    if (hyperionnet_Register_start(B)
        || hyperionnet_Register_origin_add(B, v0)
        || hyperionnet_Register_priority_add(B, v1)) {
        return 0;
    }
    return hyperionnet_Register_end(B);
}

static hyperionnet_Register_ref_t hyperionnet_Register_clone(flatbuffers_builder_t *B, hyperionnet_Register_table_t t)
{
    __flatbuffers_memoize_begin(B, t);
    if (hyperionnet_Register_start(B)
        || hyperionnet_Register_origin_pick(B, t)
        || hyperionnet_Register_priority_pick(B, t)) {
        return 0;
    }
    __flatbuffers_memoize_end(B, t, hyperionnet_Register_end(B));
}

__flatbuffers_build_vector_field(0, flatbuffers_, hyperionnet_RawImage_data, flatbuffers_uint8, uint8_t, hyperionnet_RawImage)
__flatbuffers_build_scalar_field(1, flatbuffers_, hyperionnet_RawImage_width, flatbuffers_int32, int32_t, 4, 4, INT32_C(-1), hyperionnet_RawImage)
__flatbuffers_build_scalar_field(2, flatbuffers_, hyperionnet_RawImage_height, flatbuffers_int32, int32_t, 4, 4, INT32_C(-1), hyperionnet_RawImage)

static inline hyperionnet_RawImage_ref_t hyperionnet_RawImage_create(flatbuffers_builder_t *B __hyperionnet_RawImage_formal_args)
{
    if (hyperionnet_RawImage_start(B)
        || hyperionnet_RawImage_data_add(B, v0)
        || hyperionnet_RawImage_width_add(B, v1)
        || hyperionnet_RawImage_height_add(B, v2)) {
        return 0;
    }
    return hyperionnet_RawImage_end(B);
}

static hyperionnet_RawImage_ref_t hyperionnet_RawImage_clone(flatbuffers_builder_t *B, hyperionnet_RawImage_table_t t)
{
    __flatbuffers_memoize_begin(B, t);
    if (hyperionnet_RawImage_start(B)
        || hyperionnet_RawImage_data_pick(B, t)
        || hyperionnet_RawImage_width_pick(B, t)
        || hyperionnet_RawImage_height_pick(B, t)) {
        return 0;
    }
    __flatbuffers_memoize_end(B, t, hyperionnet_RawImage_end(B));
}

__flatbuffers_build_vector_field(0, flatbuffers_, hyperionnet_NV12Image_data_y, flatbuffers_uint8, uint8_t, hyperionnet_NV12Image)
__flatbuffers_build_vector_field(1, flatbuffers_, hyperionnet_NV12Image_data_uv, flatbuffers_uint8, uint8_t, hyperionnet_NV12Image)
__flatbuffers_build_scalar_field(2, flatbuffers_, hyperionnet_NV12Image_width, flatbuffers_int32, int32_t, 4, 4, INT32_C(0), hyperionnet_NV12Image)
__flatbuffers_build_scalar_field(3, flatbuffers_, hyperionnet_NV12Image_height, flatbuffers_int32, int32_t, 4, 4, INT32_C(0), hyperionnet_NV12Image)
__flatbuffers_build_scalar_field(4, flatbuffers_, hyperionnet_NV12Image_stride_y, flatbuffers_int32, int32_t, 4, 4, INT32_C(0), hyperionnet_NV12Image)
__flatbuffers_build_scalar_field(5, flatbuffers_, hyperionnet_NV12Image_stride_uv, flatbuffers_int32, int32_t, 4, 4, INT32_C(0), hyperionnet_NV12Image)

static inline hyperionnet_NV12Image_ref_t hyperionnet_NV12Image_create(flatbuffers_builder_t *B __hyperionnet_NV12Image_formal_args)
{
    if (hyperionnet_NV12Image_start(B)
        || hyperionnet_NV12Image_data_y_add(B, v0)
        || hyperionnet_NV12Image_data_uv_add(B, v1)
        || hyperionnet_NV12Image_width_add(B, v2)
        || hyperionnet_NV12Image_height_add(B, v3)
        || hyperionnet_NV12Image_stride_y_add(B, v4)
        || hyperionnet_NV12Image_stride_uv_add(B, v5)) {
        return 0;
    }
    return hyperionnet_NV12Image_end(B);
}

static hyperionnet_NV12Image_ref_t hyperionnet_NV12Image_clone(flatbuffers_builder_t *B, hyperionnet_NV12Image_table_t t)
{
    __flatbuffers_memoize_begin(B, t);
    if (hyperionnet_NV12Image_start(B)
        || hyperionnet_NV12Image_data_y_pick(B, t)
        || hyperionnet_NV12Image_data_uv_pick(B, t)
        || hyperionnet_NV12Image_width_pick(B, t)
        || hyperionnet_NV12Image_height_pick(B, t)
        || hyperionnet_NV12Image_stride_y_pick(B, t)
        || hyperionnet_NV12Image_stride_uv_pick(B, t)) {
        return 0;
    }
    __flatbuffers_memoize_end(B, t, hyperionnet_NV12Image_end(B));
}

__flatbuffers_build_union_field(1, flatbuffers_, hyperionnet_Image_data, hyperionnet_ImageType, hyperionnet_Image)
__flatbuffers_build_union_table_value_field(flatbuffers_, hyperionnet_Image_data, hyperionnet_ImageType, RawImage, hyperionnet_RawImage)
__flatbuffers_build_union_table_value_field(flatbuffers_, hyperionnet_Image_data, hyperionnet_ImageType, NV12Image, hyperionnet_NV12Image)
__flatbuffers_build_scalar_field(2, flatbuffers_, hyperionnet_Image_duration, flatbuffers_int32, int32_t, 4, 4, INT32_C(-1), hyperionnet_Image)

static inline hyperionnet_Image_ref_t hyperionnet_Image_create(flatbuffers_builder_t *B __hyperionnet_Image_formal_args)
{
    if (hyperionnet_Image_start(B)
        || hyperionnet_Image_data_add_value(B, v1)
        || hyperionnet_Image_duration_add(B, v2)
        || hyperionnet_Image_data_add_type(B, v1.type)) {
        return 0;
    }
    return hyperionnet_Image_end(B);
}

static hyperionnet_Image_ref_t hyperionnet_Image_clone(flatbuffers_builder_t *B, hyperionnet_Image_table_t t)
{
    __flatbuffers_memoize_begin(B, t);
    if (hyperionnet_Image_start(B)
        || hyperionnet_Image_data_pick(B, t)
        || hyperionnet_Image_duration_pick(B, t)) {
        return 0;
    }
    __flatbuffers_memoize_end(B, t, hyperionnet_Image_end(B));
}

__flatbuffers_build_scalar_field(0, flatbuffers_, hyperionnet_Clear_priority, flatbuffers_int32, int32_t, 4, 4, INT32_C(0), hyperionnet_Clear)

static inline hyperionnet_Clear_ref_t hyperionnet_Clear_create(flatbuffers_builder_t *B __hyperionnet_Clear_formal_args)
{
    if (hyperionnet_Clear_start(B)
        || hyperionnet_Clear_priority_add(B, v0)) {
        return 0;
    }
    return hyperionnet_Clear_end(B);
}

static hyperionnet_Clear_ref_t hyperionnet_Clear_clone(flatbuffers_builder_t *B, hyperionnet_Clear_table_t t)
{
    __flatbuffers_memoize_begin(B, t);
    if (hyperionnet_Clear_start(B)
        || hyperionnet_Clear_priority_pick(B, t)) {
        return 0;
    }
    __flatbuffers_memoize_end(B, t, hyperionnet_Clear_end(B));
}

__flatbuffers_build_scalar_field(0, flatbuffers_, hyperionnet_Color_data, flatbuffers_int32, int32_t, 4, 4, INT32_C(-1), hyperionnet_Color)
__flatbuffers_build_scalar_field(1, flatbuffers_, hyperionnet_Color_duration, flatbuffers_int32, int32_t, 4, 4, INT32_C(-1), hyperionnet_Color)

static inline hyperionnet_Color_ref_t hyperionnet_Color_create(flatbuffers_builder_t *B __hyperionnet_Color_formal_args)
{
    if (hyperionnet_Color_start(B)
        || hyperionnet_Color_data_add(B, v0)
        || hyperionnet_Color_duration_add(B, v1)) {
        return 0;
    }
    return hyperionnet_Color_end(B);
}

static hyperionnet_Color_ref_t hyperionnet_Color_clone(flatbuffers_builder_t *B, hyperionnet_Color_table_t t)
{
    __flatbuffers_memoize_begin(B, t);
    if (hyperionnet_Color_start(B)
        || hyperionnet_Color_data_pick(B, t)
        || hyperionnet_Color_duration_pick(B, t)) {
        return 0;
    }
    __flatbuffers_memoize_end(B, t, hyperionnet_Color_end(B));
}

__flatbuffers_build_union_field(1, flatbuffers_, hyperionnet_Request_command, hyperionnet_Command, hyperionnet_Request)
__flatbuffers_build_union_table_value_field(flatbuffers_, hyperionnet_Request_command, hyperionnet_Command, Color, hyperionnet_Color)
__flatbuffers_build_union_table_value_field(flatbuffers_, hyperionnet_Request_command, hyperionnet_Command, Image, hyperionnet_Image)
__flatbuffers_build_union_table_value_field(flatbuffers_, hyperionnet_Request_command, hyperionnet_Command, Clear, hyperionnet_Clear)
__flatbuffers_build_union_table_value_field(flatbuffers_, hyperionnet_Request_command, hyperionnet_Command, Register, hyperionnet_Register)

static inline hyperionnet_Request_ref_t hyperionnet_Request_create(flatbuffers_builder_t *B __hyperionnet_Request_formal_args)
{
    if (hyperionnet_Request_start(B)
        || hyperionnet_Request_command_add_value(B, v1)
        || hyperionnet_Request_command_add_type(B, v1.type)) {
        return 0;
    }
    return hyperionnet_Request_end(B);
}

static hyperionnet_Request_ref_t hyperionnet_Request_clone(flatbuffers_builder_t *B, hyperionnet_Request_table_t t)
{
    __flatbuffers_memoize_begin(B, t);
    if (hyperionnet_Request_start(B)
        || hyperionnet_Request_command_pick(B, t)) {
        return 0;
    }
    __flatbuffers_memoize_end(B, t, hyperionnet_Request_end(B));
}

#include "flatcc/flatcc_epilogue.h"
#endif /* HYPERION_REQUEST_BUILDER_H */
